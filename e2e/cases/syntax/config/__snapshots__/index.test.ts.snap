// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`should downgrade class private method by default 1`] = `
"
;// CONCATENATED MODULE: ../../../../node_modules/.pnpm/@swc+helpers@0.5.11/node_modules/@swc/helpers/esm/_class_private_method_get.js
function _class_private_method_get(receiver, privateSet, fn) {
    if (!privateSet.has(receiver)) throw new TypeError("attempted to get private field on non-instance");

    return fn;
}


;// CONCATENATED MODULE: ../../../../node_modules/.pnpm/@swc+helpers@0.5.11/node_modules/@swc/helpers/esm/_check_private_redeclaration.js
function _check_private_redeclaration(obj, privateCollection) {
    if (privateCollection.has(obj)) {
        throw new TypeError("Cannot initialize the same private elements twice on an object");
    }
}


;// CONCATENATED MODULE: ../../../../node_modules/.pnpm/@swc+helpers@0.5.11/node_modules/@swc/helpers/esm/_class_private_method_init.js


function _class_private_method_init(obj, privateSet) {
    _check_private_redeclaration(obj, privateSet);
    privateSet.add(obj);
}


;// CONCATENATED MODULE: ./src/foo.ts


var _bar = new WeakSet();
class Foo {
    constructor(){
        _class_private_method_init(this, _bar);
        _class_private_method_get(this, _bar, bar).call(this);
    }
}
function bar() {}
 /*#__PURE__*/ 

;// CONCATENATED MODULE: ./src/index.ts


export { Foo };
"
`;
